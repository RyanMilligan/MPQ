//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "EventScore_EventSlice", "EventSlice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.EventSlice), "EventScore", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EventScore), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "PvPInstance_PvPEvent", "PvPEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.PvPEvent), "PvPInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.PvPInstance), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "EventSlice_PvPInstance", "PvPInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.PvPInstance), "EventSlice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EventSlice), true)]

#endregion

namespace LightSwitchApplication.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ApplicationData : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ApplicationData object using the connection string found in the 'ApplicationData' section of the application configuration file.
        /// </summary>
        public ApplicationData() : base("name=ApplicationData", "ApplicationData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ApplicationData object.
        /// </summary>
        public ApplicationData(string connectionString) : base(connectionString, "ApplicationData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ApplicationData object.
        /// </summary>
        public ApplicationData(EntityConnection connection) : base(connection, "ApplicationData")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventScore> EventScores
        {
            get
            {
                if ((_EventScores == null))
                {
                    _EventScores = base.CreateObjectSet<EventScore>("EventScores");
                }
                return _EventScores;
            }
        }
        private ObjectSet<EventScore> _EventScores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventSlice> EventSliceSet
        {
            get
            {
                if ((_EventSliceSet == null))
                {
                    _EventSliceSet = base.CreateObjectSet<EventSlice>("EventSliceSet");
                }
                return _EventSliceSet;
            }
        }
        private ObjectSet<EventSlice> _EventSliceSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PvPEvent> PvPEvents
        {
            get
            {
                if ((_PvPEvents == null))
                {
                    _PvPEvents = base.CreateObjectSet<PvPEvent>("PvPEvents");
                }
                return _PvPEvents;
            }
        }
        private ObjectSet<PvPEvent> _PvPEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PvPInstance> PvPInstances
        {
            get
            {
                if ((_PvPInstances == null))
                {
                    _PvPInstances = base.CreateObjectSet<PvPInstance>("PvPInstances");
                }
                return _PvPInstances;
            }
        }
        private ObjectSet<PvPInstance> _PvPInstances;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventScores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventScores(EventScore eventScore)
        {
            base.AddObject("EventScores", eventScore);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventSliceSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventSliceSet(EventSlice eventSlice)
        {
            base.AddObject("EventSliceSet", eventSlice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PvPEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPvPEvents(PvPEvent pvPEvent)
        {
            base.AddObject("PvPEvents", pvPEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PvPInstances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPvPInstances(PvPInstance pvPInstance)
        {
            base.AddObject("PvPInstances", pvPInstance);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="EventScore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventScore : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventScore object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        /// <param name="rank">Initial value of the Rank property.</param>
        /// <param name="eventScore_EventSlice">Initial value of the EventScore_EventSlice property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static EventScore CreateEventScore(global::System.Int32 id, global::System.Int32 score, global::System.Int32 rank, global::System.Int32 eventScore_EventSlice, global::System.Byte[] rowVersion)
        {
            EventScore eventScore = new EventScore();
            eventScore.Id = id;
            eventScore.Score = score;
            eventScore.Rank = rank;
            eventScore.EventScore_EventSlice = eventScore_EventSlice;
            eventScore.RowVersion = rowVersion;
            return eventScore;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = value;
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.Int32 _Score;
        partial void OnScoreChanging(global::System.Int32 value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Rank
        {
            get
            {
                return _Rank;
            }
            set
            {
                OnRankChanging(value);
                ReportPropertyChanging("Rank");
                _Rank = value;
                ReportPropertyChanged("Rank");
                OnRankChanged();
            }
        }
        private global::System.Int32 _Rank;
        partial void OnRankChanging(global::System.Int32 value);
        partial void OnRankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventScore_EventSlice
        {
            get
            {
                return _EventScore_EventSlice;
            }
            set
            {
                OnEventScore_EventSliceChanging(value);
                ReportPropertyChanging("EventScore_EventSlice");
                _EventScore_EventSlice = value;
                ReportPropertyChanged("EventScore_EventSlice");
                OnEventScore_EventSliceChanged();
            }
        }
        private global::System.Int32 _EventScore_EventSlice;
        partial void OnEventScore_EventSliceChanging(global::System.Int32 value);
        partial void OnEventScore_EventSliceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = value;
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = value;
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "EventScore_EventSlice", "EventSlice")]
        public EventSlice EventSlice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventSlice>("LightSwitchApplication.EventScore_EventSlice", "EventSlice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventSlice>("LightSwitchApplication.EventScore_EventSlice", "EventSlice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventSlice> EventSliceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventSlice>("LightSwitchApplication.EventScore_EventSlice", "EventSlice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventSlice>("LightSwitchApplication.EventScore_EventSlice", "EventSlice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="EventSlice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventSlice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventSlice object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eventSlice_PvPInstance">Initial value of the EventSlice_PvPInstance property.</param>
        /// <param name="sliceNumber">Initial value of the SliceNumber property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static EventSlice CreateEventSlice(global::System.Int32 id, global::System.Int32 eventSlice_PvPInstance, global::System.Int32 sliceNumber, global::System.Byte[] rowVersion)
        {
            EventSlice eventSlice = new EventSlice();
            eventSlice.Id = id;
            eventSlice.EventSlice_PvPInstance = eventSlice_PvPInstance;
            eventSlice.SliceNumber = sliceNumber;
            eventSlice.RowVersion = rowVersion;
            return eventSlice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventSlice_PvPInstance
        {
            get
            {
                return _EventSlice_PvPInstance;
            }
            set
            {
                OnEventSlice_PvPInstanceChanging(value);
                ReportPropertyChanging("EventSlice_PvPInstance");
                _EventSlice_PvPInstance = value;
                ReportPropertyChanged("EventSlice_PvPInstance");
                OnEventSlice_PvPInstanceChanged();
            }
        }
        private global::System.Int32 _EventSlice_PvPInstance;
        partial void OnEventSlice_PvPInstanceChanging(global::System.Int32 value);
        partial void OnEventSlice_PvPInstanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SliceNumber
        {
            get
            {
                return _SliceNumber;
            }
            set
            {
                OnSliceNumberChanging(value);
                ReportPropertyChanging("SliceNumber");
                _SliceNumber = value;
                ReportPropertyChanged("SliceNumber");
                OnSliceNumberChanged();
            }
        }
        private global::System.Int32 _SliceNumber;
        partial void OnSliceNumberChanging(global::System.Int32 value);
        partial void OnSliceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = value;
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = value;
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "EventSlice_PvPInstance", "PvPInstance")]
        public PvPInstance PvPInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PvPInstance>("LightSwitchApplication.EventSlice_PvPInstance", "PvPInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PvPInstance>("LightSwitchApplication.EventSlice_PvPInstance", "PvPInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PvPInstance> PvPInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PvPInstance>("LightSwitchApplication.EventSlice_PvPInstance", "PvPInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PvPInstance>("LightSwitchApplication.EventSlice_PvPInstance", "PvPInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "EventScore_EventSlice", "EventScore")]
        public EntityCollection<EventScore> EventScores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventScore>("LightSwitchApplication.EventScore_EventSlice", "EventScore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventScore>("LightSwitchApplication.EventScore_EventSlice", "EventScore", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="PvPEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PvPEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PvPEvent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static PvPEvent CreatePvPEvent(global::System.Int32 id, global::System.String name, global::System.Byte[] rowVersion)
        {
            PvPEvent pvPEvent = new PvPEvent();
            pvPEvent.Id = id;
            pvPEvent.Name = name;
            pvPEvent.RowVersion = rowVersion;
            return pvPEvent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = value;
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = value;
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "PvPInstance_PvPEvent", "PvPInstance")]
        public EntityCollection<PvPInstance> PvPInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PvPInstance>("LightSwitchApplication.PvPInstance_PvPEvent", "PvPInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PvPInstance>("LightSwitchApplication.PvPInstance_PvPEvent", "PvPInstance", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="PvPInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PvPInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PvPInstance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pvPInstance_PvPEvent">Initial value of the PvPInstance_PvPEvent property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static PvPInstance CreatePvPInstance(global::System.Int32 id, global::System.Int32 pvPInstance_PvPEvent, global::System.DateTime startTime, global::System.Byte[] rowVersion)
        {
            PvPInstance pvPInstance = new PvPInstance();
            pvPInstance.Id = id;
            pvPInstance.PvPInstance_PvPEvent = pvPInstance_PvPEvent;
            pvPInstance.StartTime = startTime;
            pvPInstance.RowVersion = rowVersion;
            return pvPInstance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PvPInstance_PvPEvent
        {
            get
            {
                return _PvPInstance_PvPEvent;
            }
            set
            {
                OnPvPInstance_PvPEventChanging(value);
                ReportPropertyChanging("PvPInstance_PvPEvent");
                _PvPInstance_PvPEvent = value;
                ReportPropertyChanged("PvPInstance_PvPEvent");
                OnPvPInstance_PvPEventChanged();
            }
        }
        private global::System.Int32 _PvPInstance_PvPEvent;
        partial void OnPvPInstance_PvPEventChanging(global::System.Int32 value);
        partial void OnPvPInstance_PvPEventChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = value;
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = value;
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = value;
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "PvPInstance_PvPEvent", "PvPEvent")]
        public PvPEvent PvPEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PvPEvent>("LightSwitchApplication.PvPInstance_PvPEvent", "PvPEvent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PvPEvent>("LightSwitchApplication.PvPInstance_PvPEvent", "PvPEvent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PvPEvent> PvPEventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PvPEvent>("LightSwitchApplication.PvPInstance_PvPEvent", "PvPEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PvPEvent>("LightSwitchApplication.PvPInstance_PvPEvent", "PvPEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "EventSlice_PvPInstance", "EventSlice")]
        public EntityCollection<EventSlice> EventSliceCollection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventSlice>("LightSwitchApplication.EventSlice_PvPInstance", "EventSlice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventSlice>("LightSwitchApplication.EventSlice_PvPInstance", "EventSlice", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
